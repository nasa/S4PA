#!/usr/bin/perl -w

=head1 NAME

s4pa_write_physical_media.pl 

=head1 SYNOPSIS

s4pa_write_physical_media.pl [B<-h>] [B<-f> <ftp_host>] [B<-m> <media_root>] [B<-v>] [B<-w>] B<order_id> B<request_file>

=head1 DESCRIPTION

This utility processes DVD media requests. It generates a temporary directory
containing those files listed in a media request file, generates an invoice,
and writes the contents of the temporary directory and invoice to DVD. The
media request file is either a WHOM-generated FTP script or a list of files
manually generated using a text editor. In either case, the request file
contains a list of fully qualified file specifications to be written to DVD.
COTS utility sdvdbackup is used to write and then verify DVD contents, pausing
and prompting the operator for a response whenever manual intervention is
required.

=head1 ARGUMENTS

=over 4

=item B<-f> <ftp_host>

Host machine from which media files are to be FTPed by a WHOM-generated
request file.

=item B<-h>

Prints out the help text.

=item B<-m> <media_root>

Media scratch root directory.

=item B<-v>

Enables post-write verification of DVD contents.

=item B<-w>

Enables DVD writing. Otherwise, this utility goes through all the motions of
preparing a write to DVD without actually doing so. Primarily for unit testing.

=item B<order_id>

A unique order ID for the DVD media request.

=item B<request_file>

Request file specification, generated by WHOM or a text editor, containing a 
list of fully qualified file names to be written to DVD.

=back

=head1 OUTPUT

A DVD containing those files named in the media request file and an invoice
describing the contents of the DVD.

=head1 AUTHOR

Robert Kummerer

=cut

################################################################################
# $Id: s4pa_write_physical_media.pl,v 1.1.1.1 2006/03/08 12:31:19 hegde Exp $
# -@@@ S4PA, Version $Name:  $
################################################################################

use lib '.';

use strict;
use Getopt::Std;
use S4P;
use S4PA::Media;
use vars qw($opt_f $opt_h $opt_m $opt_v $opt_w);

my $ftp_host;
my $order_id;
my $request_file;
my $media_root;
my $write_dvd;
my $verify_dvd;

my $cleanStat;
my $exitStat;
my $readStat;
my $writeStat;


################################################################################
# Process the command line.
################################################################################

usage() if (!@ARGV);
getopts('f:m:hvw') || usage();
usage() if $opt_h;

$verify_dvd = "ON";
$verify_dvd = "OFF" unless defined $opt_v;

$write_dvd = "ON";
$write_dvd = "OFF" unless defined $opt_w;

$media_root = $opt_m || "/tmp";
$ftp_host   = $opt_f || "disc1";

$order_id     = shift(@ARGV) or die "ERROR: Missing order_id and/or request_file parameters.\n";
$request_file = shift(@ARGV) or die "ERROR: Missing order_id and/or request_file parameters.\n";

S4P::logger("INFO","Invocation:\n");
S4P::logger("INFO","    $0\n");
S4P::logger("INFO","        -f $ftp_host\n");
S4P::logger("INFO","        -m $media_root\n");
S4P::logger("INFO","        -v $verify_dvd\n");
S4P::logger("INFO","        -w $write_dvd\n");
S4P::logger("INFO","        $order_id\n");
S4P::logger("INFO","        $request_file\n");


################################################################################
# Process the request file:
#   (1) generate the media scratch directory,
#   (2) validate the media request,
#   (3) soft link the request files to the media scratch directory,
#   (4) generate the invoice.
################################################################################

$readStat = S4PA::Media::ReadMedReq( $media_root, $order_id, $request_file, $ftp_host );


################################################################################
# Write the DVD.
################################################################################

if ( ($readStat == 0) && ($write_dvd eq "ON") ) {
   $writeStat = S4PA::Media::WritePhysMed( $media_root, $order_id, $verify_dvd );
}


################################################################################
# Clean-up and exit.
################################################################################

$cleanStat = S4PA::Media::CleanMedReq( $media_root, $order_id );


################################################################################
# Exit.
################################################################################

$exitStat = $readStat || $writeStat || $cleanStat;

exit $exitStat;


################################################################################
#################################### usage #####################################
################################################################################
sub usage {
   die "Usage: $0 [-h] [-f <ftp_host>] [-m <media_root>] [-v] [-w] <order_id> <request_file>
          -f                    Host machine from which media files are to be
                                FTPed by a WHOM-generated request file.
          -h                    Prints out the help text.
          -m                    Media scratch root directory.
          -v                    Enables post-write verification of DVD contents.
          -w                    Enables DVD writing. Otherwise, this utility goes
                                through all the motions of preparing a write to
                                DVD without actually doing so. Primarily for unit
                                testing.
          <order_id>            A unique order ID for the DVD media request.
          <request_file>        Request file specification, generated by WHOM or a
                                text editor, containing a list of fully qualified
                                file names to be written to DVD.\n";
   exit 1;
}
